#include "Cube.hh"

using namespace std;

Cube::Cube(int x, int y, int z, int l) : x(x), y(y), z(z), l(l){}
void Cube::print(string filename) {
ofstream myfile;
myfile.open(filename);
myfile<<
"solid OpenSCAD_Model\n"
"  facet normal -0 0 1\n"
"    outer loop\n"
"      vertex 0 30 30\n"
"      vertex 30 0 30\n"
"      vertex 30 30 30\n"
"    endloop\n"
"  endfacet\n"
"  facet normal 0 0 1\n"
"    outer loop\n"
"      vertex 30 0 30\n"
"      vertex 0 30 30\n"
"      vertex 0 0 30\n"
"    endloop\n"
"  endfacet\n"
"  facet normal 0 0 -1\n"
"    outer loop\n"
"      vertex 0 0 0\n"
"      vertex 30 30 0\n"
"      vertex 30 0 0\n"
"    endloop\n"
"  endfacet\n"
"  facet normal -0 0 -1\n"
"    outer loop\n"
"      vertex 30 30 0\n"
"      vertex 0 0 0\n"
"      vertex 0 30 0\n"
"    endloop\n"
"  endfacet\n"
"  facet normal 0 -1 0\n"
"    outer loop\n"
"      vertex 0 0 0\n"
"      vertex 30 0 30\n"
"      vertex 0 0 30\n"
"    endloop\n"
"  endfacet\n"
"  facet normal 0 -1 -0\n"
"    outer loop\n"
"      vertex 30 0 30\n"
"      vertex 0 0 0\n"
"      vertex 30 0 0\n"
"    endloop\n"
"  endfacet\n"
"  facet normal 1 -0 0\n"
"    outer loop\n"
"      vertex 30 0 30\n"
"      vertex 30 30 0\n"
"      vertex 30 30 30\n"
"    endloop\n"
"  endfacet\n"
"  facet normal 1 0 0\n"
"    outer loop\n"
"      vertex 30 30 0\n"
"      vertex 30 0 30\n"
"      vertex 30 0 0\n"
"    endloop\n"
"  endfacet\n"
"  facet normal 0 1 -0\n"
"    outer loop\n"
"      vertex 30 30 0\n"
"      vertex 0 30 30\n"
"      vertex 30 30 30\n"
"    endloop\n"
"  endfacet\n"
"  facet normal 0 1 0\n"
"    outer loop\n"
"      vertex 0 30 30\n"
"      vertex 30 30 0\n"
"      vertex 0 30 0\n"
"    endloop\n"
"  endfacet\n"
"  facet normal -1 0 0\n"
"    outer loop\n"
"      vertex 0 0 0\n"
"      vertex 0 30 30\n"
"      vertex 0 30 0\n"
"    endloop\n"
"  endfacet\n"
"  facet normal -1 -0 0\n"
"    outer loop\n"
"      vertex 0 30 30\n"
"      vertex 0 0 0\n"
"      vertex 0 0 30\n"
"    endloop\n"
"  endfacet\n"
"endsolid OpenSCAD_Model"<<endl;
myfile.close();
}

